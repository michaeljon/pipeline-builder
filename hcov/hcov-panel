#!/usr/bin/env bash

SAMPLE=$1
ORGANISM=hcov-panel
ASSEMBLY=hcov-panel
REFNAME=panel

echo Starting ${SAMPLE} run

# give us a place to work
mkdir -p ${PIPELINE_ROOT}/pipeline/${SAMPLE}

# build the pipeline
python ${PIPELINE_ROOT}/pipeline-builder/hcov/hcov-runner.py \
    --cores 12 \
    --sample ${SAMPLE} \
    --work-dir ${PIPELINE_ROOT} \
    --reference-dir ${PIPELINE_ROOT}/reference/${ORGANISM} \
    --reference-assembly ${ASSEMBLY} \
    --reference-name ${REFNAME} \
    --pipeline-dir ${PIPELINE_ROOT}/pipeline/${SAMPLE} \
    --stats-dir ${PIPELINE_ROOT}/pipeline/${SAMPLE} \
    --script ${PIPELINE_ROOT}/pipeline/${SAMPLE}/${SAMPLE}_runner \
    --temp-dir ${PIPELINE_ROOT}/tmp \
    --fastq-dir ${HOME}/tmp \
    --caller bcftools \
    --aligner bwa \
    --preprocessor fastp \
    --sorter biobambam \
    --unmapped

cp ${PIPELINE_ROOT}/pipeline-builder/assets/software_versions_mqc.html ${PIPELINE_ROOT}/pipeline/${SAMPLE}
cp ${PIPELINE_ROOT}/pipeline-builder/assets/ovationlogo.png ${PIPELINE_ROOT}/pipeline/${SAMPLE}

# run the pipeline
bash ${PIPELINE_ROOT}/pipeline/${SAMPLE}/${SAMPLE}_runner >${PIPELINE_ROOT}/pipeline/${SAMPLE}/${SAMPLE}.log 2>&1

echo Run ${SAMPLE} completed, packaging

# pack up the stuff and clean house
# rm -f ${PIPELINE_ROOT}/pipeline/${SAMPLE}/${SAMPLE}_R1.trimmed.fastq.gz
# rm -f ${PIPELINE_ROOT}/pipeline/${SAMPLE}/${SAMPLE}_R2.trimmed.fastq.gz

cd ${PIPELINE_ROOT}/pipeline/
tar cfz ${PIPELINE_ROOT}/pipeline/${SAMPLE}.tgz ./${SAMPLE}
# rm -rf ${PIPELINE_ROOT}/pipeline/${SAMPLE}

echo Finished ${SAMPLE} run
