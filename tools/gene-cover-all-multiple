#!/usr/bin/env bash

if [[ -z ${PIPELINE_ROOT} ]]; then
    echo "Missing PIPELINE_ROOT environment variable, unable to proceed"
    exit 1
fi

for FILENAME in $(find ${PIPELINE_ROOT}/pipeline -name '*.sorted.bam' -print); do
    LOCATION=$(dirname $FILENAME)
    SAMPLE=$(echo $FILENAME | cut -d/ -f6 | sed 's/.sorted.bam//')

    if [[ ! -f ${LOCATION}/${SAMPLE}.depth.gz ]]; then
        echo -ne "\033[0K${SAMPLE}:*: calculating depth...\r"
        samtools depth $FILENAME | gzip >${LOCATION}/${SAMPLE}.depth.gz
    fi

    echo -ne "\033[0K${SAMPLE}:*: building report...\r"
    ./hcov-gene-depth.py ${SAMPLE} '*' ${LOCATION}/${SAMPLE}.depth.gz ${LOCATION}

    FILES=()

    for TSV in $(find ${LOCATION} -name "${SAMPLE}*.tsv" | grep -v "__all" | sort); do
        ORGANISM_GENE=$(basename $TSV | sed "s/${SAMPLE}_//;s/.tsv//")

        FILES+=(${LOCATION}/${SAMPLE}_${ORGANISM_GENE})
    done

    echo -ne "\033[0K${SAMPLE}:*: generating gene plots...\r"
    Rscript gene_coverage.R ${FILES[@]} >/dev/null 2>&1

    FILES=()
    for TSV in $(find ${LOCATION} -name "${SAMPLE}*.tsv" | grep "__all" | sort); do
        ORGANISM_GENE=$(basename $TSV | sed "s/${SAMPLE}_//;s/.tsv//")

        FILES+=(${LOCATION}/${SAMPLE}_${ORGANISM_GENE})
    done

    echo -ne "\033[0K${SAMPLE}:*: generating organism plot...\r"
    Rscript organism_coverage.R ${FILES[@]} >/dev/null 2>&1

    echo -ne "\033[0K${SAMPLE}:*: finished.\n"
done
