#!/usr/bin/env bash

if [[ -z ${PIPELINE_ROOT} ]]; then
  echo "Missing PIPELINE_ROOT environment variable, unable to proceed"
  exit 1
fi

if [[ -z ${DESTINATION_FOLDER} ]]; then
  echo "Missing DESTINATION_FOLDER environment variable, unable to proceed"
  exit 1
fi

if [[ ! -d ${DESTINATION_FOLDER} ]]; then
  echo "DESTINATION_FOLDER doesn't exist or is not a directory, unable to proceed"
  exit 1
fi

for FILENAME in $(find ${PIPELINE_ROOT}/pipeline -name '*.sorted.bam' -print); do
  LOCATION=$(dirname $FILENAME)
  SAMPLE=$(basename $FILENAME | sed 's/.sorted.bam//')
  DEPTH=${LOCATION}/${SAMPLE}.depth.gz

  if [[ ! -f ${DEPTH} ]]; then
    echo -ne "\033[0K${SAMPLE}: calculating depth...\r"
    samtools depth $FILENAME | gzip >${DEPTH}
  fi

  echo -ne "\033[0K${SAMPLE}: generating gap report...\r"

  ./gap_minder.py \
    --region-file ./hcov-regions.json \
    --min-depth 10 \
    --sample ${SAMPLE} \
    --coverage-file ${DEPTH} \
    --output ${DESTINATION_FOLDER}/${SAMPLE}_gaps.csv

  echo -ne "\033[0K${SAMPLE}: finished.\n"
done

echo "sample,organism,gapStart,gapEnd,gapSize,averageDepth,medianDepth,minDepth,maxDepth,stdevDepth,firstQuartileDepth,thirdQuartileDepth,averageDelta,medianDelta,minDelta,maxDelta,stdevDelta,firstQuartileDelta,thirdQuartileDelta,geneStart,geneEnd,gene,overlapType" >${DESTINATION_FOLDER}/gap_report.csv
cat ${DESTINATION_FOLDER}/*_gaps.csv | grep -v '^sample' >>${DESTINATION_FOLDER}/gap_report.csv
